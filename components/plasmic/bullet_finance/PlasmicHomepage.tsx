// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pMdR3HE58fchjU5MKnv9KV
// Component: qXbhUiT421l8

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Button from "../../Button"; // plasmic-import: HGSty6rZ08u/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent

import { useScreenVariants as useScreenVariantseJBsN3Xa89F } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: eJBsN3-Xa89-f/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_bullet_finance.module.css"; // plasmic-import: pMdR3HE58fchjU5MKnv9KV/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: qXbhUiT421l8/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: R0LO7nqIljI/icon
import ArrowUpRightMdSvgrepoComsvgIcon from "./icons/PlasmicIcon__ArrowUpRightMdSvgrepoComsvg"; // plasmic-import: K2rSbJId9j/icon
import DocumentTextSvgrepoComsvgIcon from "./icons/PlasmicIcon__DocumentTextSvgrepoComsvg"; // plasmic-import: kLhJAqmQQt/icon
import BlockchainSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__BlockchainSvgrepoCom1Svg"; // plasmic-import: yat9hQpL9k/icon
import WalletSvgrepoCom3SvgIcon from "./icons/PlasmicIcon__WalletSvgrepoCom3Svg"; // plasmic-import: s73VuNOXiV/icon
import SecuritySvgrepoComsvgIcon from "./icons/PlasmicIcon__SecuritySvgrepoComsvg"; // plasmic-import: VfmWhDTTRh/icon
import MenuSvgrepoCom5SvgIcon from "./icons/PlasmicIcon__MenuSvgrepoCom5Svg"; // plasmic-import: QOrV05AskU/icon
import DiscordFillSvgrepoComsvgIcon from "./icons/PlasmicIcon__DiscordFillSvgrepoComsvg"; // plasmic-import: nrMP-Yv4iN/icon
import TelegramSvgrepoCom4SvgIcon from "./icons/PlasmicIcon__TelegramSvgrepoCom4Svg"; // plasmic-import: diaaMw_r8a/icon
import InstagramFSvgrepoCom2SvgIcon from "./icons/PlasmicIcon__InstagramFSvgrepoCom2Svg"; // plasmic-import: nNAd4RaSMU/icon
import TwitterRoundSvgrepoComsvgIcon from "./icons/PlasmicIcon__TwitterRoundSvgrepoComsvg"; // plasmic-import: 8nH40H-PCX/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<"div">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  hero?: p.Flex<"section">;
  product?: p.Flex<"section">;
  trailler?: p.Flex<"section">;
  roadmap?: p.Flex<"section">;
  community?: p.Flex<"section">;
  community2?: p.Flex<"section">;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantseJBsN3Xa89F()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__ruq5N)} />

          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tz5Ce
                    )}
                    component={Link}
                    href={"#" as const}
                    platform={"nextjs"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___8AgOd)}
                      displayHeight={"56px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      src={{
                        src: "/plasmic/bullet_finance/images/group6Png.png",
                        fullWidth: 512,
                        fullHeight: 139,
                        aspectRatio: undefined
                      }}
                    />
                  </p.PlasmicLink>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pNit)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/close.svg" as const}
                  />
                }
                itemsGap={24 as const}
                menuItems={
                  <React.Fragment>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__uqeUn
                      )}
                      component={Link}
                      href={
                        "https://bulletswap.gitbook.io/bulletswap.finance/" as const
                      }
                      platform={"nextjs"}
                    >
                      {"Docs"}
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__sHpLf
                      )}
                      component={Link}
                      href={"https://discord.gg/uRx8jmGgS6" as const}
                      platform={"nextjs"}
                    >
                      {"Discord"}
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__kugUr
                      )}
                      component={Link}
                      href={"https://t.me/Bulletswap_Official" as const}
                      platform={"nextjs"}
                    >
                      {"Telegram"}
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__zaXw5
                      )}
                      component={Link}
                      href={"https://twitter.com/Bulletswap_DEX" as const}
                      platform={"nextjs"}
                    >
                      {"Twitter"}
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__mkHeN
                      )}
                      component={Link}
                      href={"https://crew3.xyz/c/bulletswapfinance" as const}
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__pup74
                        )}
                        color={"yellow" as const}
                        endIcon={
                          <ArrowUpRightMdSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mzDbQ
                            )}
                            role={"img"}
                          />
                        }
                        link={"https://crew3.xyz/c/bulletswapfinance" as const}
                        showEndIcon={true}
                      >
                        {"Join Whitelist"}
                      </Button>
                    </p.PlasmicLink>
                  </React.Fragment>
                }
                openButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__j0VSt)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/menu.svg" as const}
                  />
                }
                responsiveBreakpoint={768 as const}
              />
            </div>
          ) : null}
          <p.Stack
            as={"section"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.columns__tC7G)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___16YV)}
                >
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__nxsvT)}
                    effect={"slide" as const}
                    triggerOnce={true}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__nq2Lh
                      )}
                    >
                      {"Breaking boundaries, Hitting targets"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gyJq9
                      )}
                    >
                      {
                        "By combining blockchain technology and AI, Bulletswap Finance provides investors with a unique opportunity to manage their investments in a more efficient, transparent, and secure manner."
                      }
                    </div>
                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9U4Q
                        )}
                      >
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__hS7O6
                          )}
                          component={Link}
                          href={
                            "https://bulletswap.gitbook.io/bulletswap.finance" as const
                          }
                          platform={"nextjs"}
                          target={"_blank" as const}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__nHAgB
                            )}
                            color={"white" as const}
                            endIcon={
                              <DocumentTextSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___40Jnb
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                          >
                            {"Read Docs"}
                          </Button>
                        </p.PlasmicLink>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__rypIc
                          )}
                          component={Link}
                          href={
                            "https://crew3.xyz/c/bulletswapfinance" as const
                          }
                          platform={"nextjs"}
                          target={"_blank" as const}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button___7OQhl
                            )}
                            color={"yellow" as const}
                            endIcon={
                              <ArrowUpRightMdSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___9KlDr
                                )}
                                role={"img"}
                              />
                            }
                            link={
                              "https://crew3.xyz/c/bulletswapfinance" as const
                            }
                            showEndIcon={true}
                          >
                            {"Join Whitelist"}
                          </Button>
                        </p.PlasmicLink>
                      </p.Stack>
                    ) : null}
                  </Reveal>
                </p.Stack>
                <div className={classNames(projectcss.all, sty.column__cN0Yl)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__h8Rqi)}
                    direction={"right" as const}
                    effect={"slide" as const}
                    reverse={false}
                    triggerOnce={true}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__s0NfZ
                        )}
                      />
                    ) : null}
                  </Reveal>
                </div>
              </div>
            ) : null}
          </p.Stack>
          <p.Stack
            as={"section"}
            data-plasmic-name={"product"}
            data-plasmic-override={overrides.product}
            hasGap={true}
            className={classNames(projectcss.all, sty.product)}
          >
            <Reveal
              className={classNames("__wab_instance", sty.reveal__v3Ztl)}
              direction={"up" as const}
              effect={"slide" as const}
              triggerOnce={false}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__xbV5W
                )}
              >
                {"Our Products"}
              </h1>
            </Reveal>
            <Reveal
              cascade={false}
              className={classNames("__wab_instance", sty.reveal__mp0Xv)}
              direction={"up" as const}
              effect={"slide" as const}
              triggerOnce={true}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__mhKWs)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__zikfa)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__t4DR
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vqz0T)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/bulletSwappng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__prxq3
                          )}
                        >
                          {"Bullet Swap"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lQkMv
                          )}
                        >
                          {
                            "Token swaps on Bulletswap are a simple way to trade one ERC20 token for another via automated liquidity pools"
                          }
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                  <div
                    className={classNames(projectcss.all, sty.column__oi2By)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__r1ZnZ
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__xApVn)}
                          displayHeight={"300px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/bulletpoolpng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___94A3B
                          )}
                        >
                          {"Bullet Pool"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__e8XOy
                          )}
                        >
                          {
                            "Liquidity pools allow you to provide liquidity by adding your tokens to liquidity pools."
                          }
                        </div>
                      </div>
                    ) : null}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__h1Ux1)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fLnCr
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___0DnTt)}
                          displayHeight={"300px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/bulletbridgepng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___57ZbL
                          )}
                        >
                          {"Bullet Bridge"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kbTnT
                          )}
                        >
                          {
                            "Bulletswap Finance also offers a Bridge feature that allows for the seamless transfer of assets between different blockchains"
                          }
                        </div>
                      </div>
                    ) : null}
                  </div>
                </p.Stack>
              ) : null}
            </Reveal>
            <Reveal
              className={classNames("__wab_instance", sty.reveal__cdgPw)}
              direction={"up" as const}
              effect={"slide" as const}
              triggerOnce={true}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__uJzEg)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__sQs7U)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__clncW
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__hkNlN)}
                          displayHeight={"300px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/bulletminingpng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1RXkf
                          )}
                        >
                          {"Bullet Farming"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t8Icj
                          )}
                        >
                          {
                            "Yield Farming is the process of using Decentralized Finance (DeFi) protocols to generate Interest on your Cryptocurrency Assets"
                          }
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                  <div
                    className={classNames(projectcss.all, sty.column__yEjH5)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hwip
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__cHBb)}
                          displayHeight={"300px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/launchpadpng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__uaCuh
                          )}
                        >
                          {"Bullets Pad"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wyynN
                          )}
                        >
                          {
                            "BulletsPAD is a platform designed to assist new blockchain projects in raising funds by providing a streamlined and secure process for their Initial DEX Offering (IDO)"
                          }
                        </div>
                      </div>
                    ) : null}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___2K2Ct)}
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vpGvJ
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oosB0)}
                          displayHeight={"300px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"300px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/bullet_finance/images/nftRobotpng.png",
                            fullWidth: 1024,
                            fullHeight: 1024,
                            aspectRatio: undefined
                          }}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__y9W6S
                          )}
                        >
                          {"NFT Marketplace"}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__r9Uty
                          )}
                        >
                          {
                            "Bulletswap Finance also features an NFT Marketplace that allows users to buy, sell, and trade non-fungible tokens (NFTs)"
                          }
                        </div>
                      </div>
                    ) : null}
                  </div>
                </p.Stack>
              ) : null}
            </Reveal>
          </p.Stack>
          <p.Stack
            as={"section"}
            data-plasmic-name={"trailler"}
            data-plasmic-override={overrides.trailler}
            hasGap={true}
            className={classNames(projectcss.all, sty.trailler)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rtJoE)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___9XWDf)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"300px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/bullet_finance/images/group6Png.png",
                  fullWidth: 512,
                  fullHeight: 139,
                  aspectRatio: undefined
                }}
              />

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__unqNn
                )}
              >
                {
                  "You can get free BLT as a reward for every trade from trade mining"
                }
              </h5>
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox__c8T1G)} />
          </p.Stack>
          <p.Stack
            as={"section"}
            data-plasmic-name={"roadmap"}
            data-plasmic-override={overrides.roadmap}
            hasGap={true}
            className={classNames(projectcss.all, sty.roadmap)}
          >
            <Reveal
              className={classNames("__wab_instance", sty.reveal___9C0Tl)}
              direction={"up" as const}
              effect={"slide" as const}
              triggerOnce={true}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__ekXtp
                )}
              >
                {"Roadmap"}
              </h1>
            </Reveal>
            <Reveal
              className={classNames("__wab_instance", sty.reveal___86V1O)}
              direction={"right" as const}
              effect={"slide" as const}
              triggerOnce={true}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__fxlgJ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cSxZ3)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ah3A7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7I5SJ
                        )}
                      >
                        <BlockchainSvgrepoCom1SvgIcon
                          className={classNames(projectcss.all, sty.svg__crwWp)}
                          role={"img"}
                        />
                      </div>
                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__ykmQk
                        )}
                      >
                        {"Q2 : 2023"}
                      </h5>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__akmNk
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__jKPfa
                          )}
                        >
                          {
                            "Launch of Bulletswap Finance DEX on the ZKSync Era Chain"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pwA
                          )}
                        >
                          {
                            "Integration with a wide range of decentralized applications (dApps)"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__eHmpi
                          )}
                        >
                          {
                            "Implementation of a user-friendly interface and comprehensive"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__yp13
                          )}
                        >
                          {"Introduction of staking rewards for users"}
                        </li>
                      </ul>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4Ox5Y
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vhSue
                        )}
                      >
                        <WalletSvgrepoCom3SvgIcon
                          className={classNames(projectcss.all, sty.svg__myDJ)}
                          role={"img"}
                        />
                      </div>
                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__diqPi
                        )}
                      >
                        {"Q3 : 2023"}
                      </h5>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul___4Ws2V
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___9TeoW
                          )}
                        >
                          {"Expansion of the platform's supported tokens,"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___4GtKq
                          )}
                        >
                          {"Implementation of an automated market-making (AMM)"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__aEz2E
                          )}
                        >
                          {"incentives and referral programs"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___9LI
                          )}
                        >
                          {"Integration with popular wallets and payment"}
                        </li>
                      </ul>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ws2F6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tubYc
                        )}
                      >
                        <SecuritySvgrepoComsvgIcon
                          className={classNames(projectcss.all, sty.svg__nwPm)}
                          role={"img"}
                        />
                      </div>
                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__j6KrQ
                        )}
                      >
                        {"Q4 : 2023"}
                      </h5>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__a8MP
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__gtQi
                          )}
                        >
                          {"Implementation of governance mechanisms"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qdwmV
                          )}
                        >
                          {
                            "Introduction of decentralized lending and borrowing services "
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__wLah5
                          )}
                        >
                          {"Expansion of the platform's community"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sqRr5
                          )}
                        >
                          {"Implementation of advanced security measures"}
                        </li>
                      </ul>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aip3A)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zXhX
                        )}
                      >
                        <MenuSvgrepoCom5SvgIcon
                          className={classNames(projectcss.all, sty.svg__qnPk7)}
                          role={"img"}
                        />
                      </div>
                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__cfHAu
                        )}
                      >
                        {"Present : Future"}
                      </h5>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__bKuf8
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__aStXf
                          )}
                        >
                          {"Smart Router"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___8MsBf
                          )}
                        >
                          {"NFT Market Place"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__w9RG8
                          )}
                        >
                          {"Launchpad"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__z3Qxr
                          )}
                        >
                          {"Etc"}
                        </li>
                      </ul>
                    </p.Stack>
                  </div>
                </div>
              ) : null}
            </Reveal>
          </p.Stack>
          <p.Stack
            as={"section"}
            data-plasmic-name={"community"}
            data-plasmic-override={overrides.community}
            hasGap={true}
            className={classNames(projectcss.all, sty.community)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__o2Tmy)}>
                <div className={classNames(projectcss.all, sty.freeBox__h95Aw)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aeYyS)}
                    />
                  ) : null}
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__eo3Ee
                    )}
                  >
                    {"Be a Gunners, join the Bullet community"}
                  </h1>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__s4ZGd)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__tOrjK
                      )}
                      component={Link}
                      href={"https://crew3.xyz/c/bulletswapfinance" as const}
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__iKxXn
                        )}
                        color={"white" as const}
                        endIcon={
                          <ArrowUpRightMdSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wp9OJ
                            )}
                            role={"img"}
                          />
                        }
                        showEndIcon={true}
                      >
                        {"Join Whitelist"}
                      </Button>
                    </p.PlasmicLink>
                  </p.Stack>
                </div>
              </div>
            ) : null}
          </p.Stack>
          <p.Stack
            as={"section"}
            data-plasmic-name={"community2"}
            data-plasmic-override={overrides.community2}
            hasGap={true}
            className={classNames(projectcss.all, sty.community2)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__kImoN)}>
                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__nTRkX
                  )}
                >
                  {"Don't miss out on the latest news and updates"}
                </h5>
              </div>
            ) : null}
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__j6QDe)}
            >
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__xFHjg
                )}
                component={Link}
                href={"https://discord.gg/uRx8jmGgS6" as const}
                platform={"nextjs"}
                target={"_blank" as const}
              >
                <DiscordFillSvgrepoComsvgIcon
                  className={classNames(projectcss.all, sty.svg__bLdpR)}
                  role={"img"}
                />
              </p.PlasmicLink>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__hsrZ
                )}
                component={Link}
                href={"https://t.me/Bulletswap_Official" as const}
                platform={"nextjs"}
                target={"_blank" as const}
              >
                <TelegramSvgrepoCom4SvgIcon
                  className={classNames(projectcss.all, sty.svg__kwzL)}
                  role={"img"}
                />
              </p.PlasmicLink>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__af03F
                )}
                component={Link}
                href={"https://instagram.com/Bulletswap_Dex" as const}
                platform={"nextjs"}
                target={"_blank" as const}
              >
                <InstagramFSvgrepoCom2SvgIcon
                  className={classNames(projectcss.all, sty.svg__bolbd)}
                  role={"img"}
                />
              </p.PlasmicLink>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__xZzuY
                )}
                component={Link}
                href={"https://twitter.com/Bulletswap_DEX" as const}
                platform={"nextjs"}
                target={"_blank" as const}
              >
                <TwitterRoundSvgrepoComsvgIcon
                  className={classNames(projectcss.all, sty.svg___4CjBf)}
                  role={"img"}
                />
              </p.PlasmicLink>
            </p.Stack>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___7Ol3M)}>
                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__mkAjC
                  )}
                >
                  {"© Bullets.Finance 2023"}
                </h5>
              </div>
            ) : null}
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "navigationBar",
    "hero",
    "product",
    "trailler",
    "roadmap",
    "community",
    "community2"
  ],
  header: ["header", "navigationBar"],
  navigationBar: ["navigationBar"],
  hero: ["hero"],
  product: ["product"],
  trailler: ["trailler"],
  roadmap: ["roadmap"],
  community: ["community"],
  community2: ["community2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  navigationBar: typeof NavigationBar;
  hero: "section";
  product: "section";
  trailler: "section";
  roadmap: "section";
  community: "section";
  community2: "section";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    navigationBar: makeNodeComponent("navigationBar"),
    hero: makeNodeComponent("hero"),
    product: makeNodeComponent("product"),
    trailler: makeNodeComponent("trailler"),
    roadmap: makeNodeComponent("roadmap"),
    community: makeNodeComponent("community"),
    community2: makeNodeComponent("community2"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Bullets.Finance | Breaking boundaries",
      description:
        "Bullet Finance is a blockchain project that aims to revolutionize the financial industry by introducing a decentralized and secure platform for investment management",
      ogImageSrc:
        "https://site-assets.plasmic.app/f564f734245f61ed487bf442cc1f7477.png",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
